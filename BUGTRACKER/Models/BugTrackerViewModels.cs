using System.Collections.Generic;
using System.ComponentModel.DataAnnotations; //[Display]
using System.Web.Mvc; //MultiSelectList

//roles and project view model
//2 classes
//will be used for organization of roles
namespace BUGTRACKER.Models
{
    //when scaffold, we dont want to see RoleId or RoleName, so what we can do is use an addition property
    //using "[]" syntax, which will be easier to use here than to use in the VIEW
    public class RolesViewModel
    {
        //list all users in role view model
        //highlight all certain roles & select/deselect
        //all tables generated by entity framework asp.net, the ID fields are STRINGS
        //entity framework use GUI which generate a STRING which represents the unique ID
        //all the model we build use INT ID since it's easier
        
        //id gen by entity framework
        public string RoleId { get; set; }
        [Display(Name ="Role Name")]
        public string RoleName { get; set; }
        [Display(Name = "Assigned Users")]
        public MultiSelectList User { get; set; }
        public string[] SelectedUsers { get; set; }

        //In HTML, MultiSelectList cannot return a C# list, but can return an array of strings
    }
    public class ProjectsViewModel
    {
        //id gen by user
        public int ProjectId { get; set; }
        [Display(Name = "Project Name")]
        public string ProjectName { get; set; }

        //many to select from
        [Display(Name = "Assigned Developer")]
        public MultiSelectList Developers { get; set; }
        public string[] SelectedDevelopers { get; set; }

        //one to select from
        [Display(Name = "Project Manager")]
        public SelectList ProjectManager { get; set; }
        public string SelectedProjectManager { get; set; }
    }

    public class DashboardViewModel
    {
        public ICollection<Project> Projects { get; set; }
        public ICollection<Ticket> Tickets { get; set; }
        //public ICollection<TicketNotification> TicketNotifications { get; set; }
    }
    public class AdminChangeRole
    {
        public ApplicationUser Users { get; set; }
        public MultiSelectList Roles { get; set; }
        public string[] SelectedRoles { get; set; }
    }

}
